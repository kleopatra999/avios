                      **** COMPILING & RUNNING****

This software has been developed and tested on Linux 1.2.13, HP-UX 10.01 & 
10.20, Digital Unix 3.2 (OSF) and SunOS 5.5 (Solaris) so it should compile on 
these without any problems (well ok , there may be some warnings :). Since the 
code is all in one module** and all the header is just one module there is no
makefile, you just call the compiler direct from the command line (or make
up a short shell file) as so:

Linux: cc -DLINUX avios120.c

OSF, SunOS5.5: cc avios120.c
    (For SunOS above make sure cc is a link or alias to the berkeley
     compiler which is usually /usr/ucb/cc. SunOS GCC might not work)

HP-UX 10.01: cc -Ae -DNO_USLEEP avios120.c   
HP-UX 10.20: cc -Ae avios120.c  
    (You'll need the HP-UX ANSI compiler for both of the above)

FreeBSD: cc -DFREEBSD avios120.c  
     (Some setups may have problems with the crypt() call. If this is the
      case then add -DNO_CRYPT on the compile line.)

AIX: cc avios120.c (maybe, I'm just guessing)

If you have a system that is not mentioned here and it compiles successfully
on it please let me know what the compiler command line options are so I can
put the info here in the next release. Thanks. Also if you get an error along
the lines of "usleep() not defined" etc then use the -DNO_USLEEP option as
per HP-UX 10.01.


All unix compilers default to "a.out" as the binary which you can run just by 
typing the name. Avios has some command line options however which you can
use. These are:

 -i <init file>: Set the init file to something other than the default 'init'.
 -s <syslog file>: Set the syslog to write to a file rather than stdout.
 -d: Run as a daemon.
 -v: Print the Avios version number.
 -h: Print some command line option help.

When Avios is running it catches a number of signals. These include control-C 
(SIGINT), control-\ (SIGQUIT) and control-Z (SIGTSTP). ^C and ^\ will cause 
Avios to dump the current process status's and exit whilst ^Z will cause a 
status dump then a pause (unless running as a daemon or pause_on_sigtstp init 
option is NO) until you press a key upon which Avios will resume execution. 
Because of this ^Z is a very usefull debugging tool. The other signals Avios 
catches are SIGTERM (there is the ignore_sigterm init file option to ignore 
this) , SIGSEGV and SIGBUS. The last 2 are caused by Avios crashing so if you 
see one of those two things have gone wrong and if you could also let me know 
if it does crash so I can try and trace the bug.




** Unlike a lot of coders I find it easier to work on a program if all its
   code is in the same file as I don't have to flick between windows or 
   files in editors during development plus it saves having a header file
   full of externs and having different versions of different modules. Makes
   version control a cinch.
