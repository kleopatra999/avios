                      **** COMPILING & RUNNING****

This software has been developed and tested on Linux 1.2.13, HP-UX 10.01 & 
10.20, Digital Unix 3.2 (OSF) and SunOS 5.5 (Solaris) so it should compile on 
these without any problems (well ok , there may be some warnings :). Uncomment
the appropriate CC line in the makefile for your version of Unix and hopefully
all should be well. The runnable binary created is called "avios".

Solaris users should note that most Solaris systems have 2 compilers 
installed. One is the main Solaris one and is the BSD compatable one.
Ironically the BSD one appears to be more standardised than the Sun one
(though any users of SunOS 4 and its hopeless non-ansi compiler won't be too
shocked at this news :) and so use that in preference. It does have one
minor bug though (or rather its header files do) but this is taken care of
by a command line define.

If you have a system that is not mentioned here and it compiles successfully
on it please let me know what the compiler command line options are so I can
put the info here in the next release. Thanks. Also if you get an error along
the lines of "usleep() not defined" etc then use the -DNO_USLEEP option as
per HP-UX 10.01.


Avios has some command line options however which you can use. These are:

 -i <init file>: Set the init file to something other than the default 'init'.
 -s <syslog file>: Set the syslog to write to a file rather than stdout.
 -d: Run as a daemon.
 -q: Quiet bootup mode - Don't print any non-syslog messages.
 -v: Print the Avios version number and build.
 -h: Print some command line option help.

When Avios is running it catches a number of signals. These include control-C 
(SIGINT), control-\ (SIGQUIT) and control-Z (SIGTSTP). ^C and ^\ will cause 
Avios to dump the current process status's and exit whilst ^Z will cause a 
status dump then a pause (unless running as a daemon or pause_on_sigtstp init 
option is NO) until you press a key upon which Avios will resume execution. 
Because of this ^Z is a very usefull debugging tool. The other signals Avios 
catches are SIGTERM (there is the ignore_sigterm init file option to ignore 
this) , SIGSEGV and SIGBUS. The last 2 are caused by Avios crashing so if you 
see one of those two things have gone wrong and if you could also let me know 
if it does crash so I can try and trace the bug.




** Unlike a lot of coders I find it easier to work on a program if all its
   code is in the same file as I don't have to flick between windows or 
   files in editors during development plus it saves having a header file
   full of externs and having different versions of different modules. Makes
   version control a cinch.
